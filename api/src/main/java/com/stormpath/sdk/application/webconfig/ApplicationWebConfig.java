/*
 * Copyright 2016 Stormpath, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.stormpath.sdk.application.webconfig;

import com.stormpath.sdk.api.ApiKey;
import com.stormpath.sdk.application.Application;
import com.stormpath.sdk.resource.Auditable;
import com.stormpath.sdk.resource.Resource;
import com.stormpath.sdk.resource.Saveable;
import com.stormpath.sdk.tenant.Tenant;

/**
 * As ApplicationWebConfig resource is used to configure how the {@link Application application} associated to
 * {@link WebFeatureConfig this} object behaves in the Stormpath Client Api.
 * <p/>
 * For example, if you don't want to let users to register to associated the {@link Application application} via the
 * Stormpath Client Api, you need to turn it off.
 * <p/>
 * <pre>
 * ApplicationWebConfig webConfig = application.getWebConfig();
 * webConfig.getRegisterConfig().setEnabled(false);
 * webConfig.save();
 * </pre>
 * <p/>
 * Or if you want to expands the groups of the account that is access via the  {@code /me} route.
 * <p/>
 * <pre>
 * ApplicationWebConfig webConfig = application.getWebConfig();
 * webConfig.getMeConfig().getMeExpansionConfig().setGroups(true);
 * webConfig.save();
 * </pre>
 *
 * @since 1.2.0
 */
public interface ApplicationWebConfig extends Resource, Saveable, Auditable {

    /**
     * Returns the WebConfiguration's Domain name, this is automatically generated by Stormpath (using the {@link #getDnsLabel() value}
     * and is guaranteed to be unique across all {@link com.stormpath.sdk.tenant.Tenant tenants} in Stormpath.
     *
     * @return the WebConfiguration's Domain name value or {@code null} if one hasn't been generated for {@code this}
     * resource.
     */
    String getDomainName();

    /**
     * Returns the current dnsLabel or {@code null} if none has been set.
     *
     * @return the current dnsLabel or {@code null} if none has been set.
     */
    String getDnsLabel();

    /**
     * Sets the preferred dnsLabel of the client api domain name.
     * <p/>
     * Warning: Changing this value will override the {@link #getDomainName() domainName} value.
     *
     * @param dnsLabel to
     */
    void setDnsLabel(String dnsLabel);

    /**
     * Returns the ApplicationWebConfigStatus's status. Users won't be able to use the Stormpath's Client Api if it's
     * disabled.
     *
     * @return the webConfiguration's status.
     */
    ApplicationWebConfigStatus getStatus();

    /**
     * Sets the webConfiguration's status. Users won't be able to use the Stormpath's Client Api if it's disabled.
     *
     * @param status the webConfiguration's status.
     */
    void setStatus(ApplicationWebConfigStatus status);

    /**
     * Returns the {@link ApiKey signingApiKey} used to sign and/or validate requests and assertions issued by Stormpath's
     * Client Api or {@code null} if none is set.
     *
     * @return the {@link ApiKey signingApiKey} used to sign and/or validate requests and assertions issued by Stormpath's
     * Client Api or {@code null} if none is set.
     */
    ApiKey getSigningApiKey();

    /**
     * Sets the {@link ApiKey apiKey} to be used by Stormpath's Client Api to sign request and assertions. If set to
     * {@code null} the Stormpath Client Api won't be available for users.
     *
     * @param apiKey to be used by Stormpath's Client Api to sign request and assertions. If set to
     *               {@code null} the Stormpath Client Api won't be available for users.
     */
    void setSigningApiKey(ApiKey apiKey);

    /**
     * Returns the {@link Oauth2Config oauth2Config} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     *
     * @return the {@link Oauth2Config oauth2Config} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     */
    Oauth2Config getOAuth2Config();

    /**
     * Returns the {@link CookieConfig accessTokenCookieConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     *
     * @return the {@link CookieConfig accessTokenCookieConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     */
    CookieConfig getAccessTokenCookieConfig();

    /**
     * Returns the {@link CookieConfig refreshTokenCookieConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     *
     * @return the {@link CookieConfig refreshTokenCookieConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     */
    CookieConfig getRefreshTokenCookieConfig();

    /**
     * Returns the {@link RegisterConfig registerConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     *
     * @return the {@link RegisterConfig registerConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     */
    RegisterConfig getRegisterConfig();

    /**
     * Returns the {@link VerifyEmailConfig verifyEmailConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     *
     * @return the {@link VerifyEmailConfig verifyEmailConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     */
    VerifyEmailConfig getVerifyEmailConfig();

    /**
     * Returns the {@link LoginConfig loginConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     *
     * @return the {@link LoginConfig loginConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     */
    LoginConfig getLoginConfig();

    /**
     * Returns the {@link LogoutConfig logoutConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     *
     * @return the {@link LogoutConfig logoutConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     */
    LogoutConfig getLogoutConfig();

    /**
     * Returns the {@link ForgotPasswordConfig forgotPasswordConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     *
     * @return the {@link ForgotPasswordConfig forgotPasswordConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     */
    ForgotPasswordConfig getForgotPasswordConfig();

    /**
     * Returns the {@link ChangePasswordConfig changePasswordConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     *
     * @return the {@link ChangePasswordConfig changePasswordConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     */
    ChangePasswordConfig getChangePasswordConfig();

    /**
     * Returns the {@link IdSiteConfig idSiteConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     *
     * @return the {@link IdSiteConfig idSiteConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     */
    IdSiteConfig getIdSiteConfig();

    /**
     * Returns the {@link CallbackConfig callbackConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     *
     * @return the {@link CallbackConfig callbackConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     */
    CallbackConfig getCallbackConfig();

    /**
     * Returns the {@link MeConfig meConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     *
     * @return the {@link MeConfig meConfig} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     */
    MeConfig getMeConfig();

    /**
     * Returns the {@link Application Application} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     *
     * @return the {@link Application Application} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     */
    Application getApplication();

    /**
     * Returns the {@link Tenant tenant} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     *
     * @return the {@link Tenant tenant} associated to this {@link ApplicationWebConfig applicationWebConfig}.
     */
    Tenant getTenant();
}
